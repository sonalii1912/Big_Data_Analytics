# -*- coding: utf-8 -*-
"""visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hfEIFeE69qOcpsMJatqjWQ2k1683M3XP

**Design a program to analyze extensive transactional data employing Graph Analytics, and generate Data Visualization reports encompassing components like Lists, Crosstabs, Statistics, Charts, Maps, Data Grouping & Sorting, Filtering Reports, Adding Calculations to Reports, Conditional Formatting, and Adding Summary Lines to Reports. Additionally, enable functionalities to Run or Schedule reports, and support various output formats such as PDF, Excel, CSV, XML, etc.**

Dataset Used: Iris dataset
"""

from sklearn.datasets import load_iris
import pandas as pd

iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['target'] = iris.target

df.describe()

print(df.head())

# Cross-tabs
crosstab = pd.crosstab(df['target'], df['sepal length (cm)'])
print(crosstab)

"""**Visualization**"""

import matplotlib.pyplot as plt
import seaborn as sns

# Statistical visualization
sns.pairplot(df, hue='target')
plt.show()

# Bar chart
plt.figure(figsize=(10, 6))
sns.countplot(x='target', data=df)
plt.title('Distribution of Iris Species')
plt.xlabel('Species')
plt.ylabel('Count')
plt.savefig('bar_chart.pdf')  # Save bar chart to PDF
plt.show()

# Pie chart
plt.figure(figsize=(8, 8))
df['target'].value_counts().plot.pie(autopct='%1.1f%%', labels=iris.target_names)
plt.title('Pie Chart of Iris Species')
plt.ylabel('')
plt.savefig('pie_chart.pdf')  # Save pie chart to PDF
plt.show()

# Scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='sepal length (cm)', y='sepal width (cm)', hue='target', data=df)
plt.title('Sepal Length vs Sepal Width')
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal Width (cm)')
plt.savefig('scatter_plot.pdf')  # Save scatter plot to PDF
plt.show()

# Crosstab visualization
crosstab = pd.crosstab(df['target'], df['sepal length (cm)'])
plt.figure(figsize=(10, 6))
sns.heatmap(crosstab, annot=True, cmap='YlGnBu')
plt.title('Crosstab Visualization')
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Species')
plt.savefig('crosstab.pdf')  # Save crosstab visualization to PDF
plt.show()

# Data grouping and sorting
grouped_data = df.groupby('target').mean()
sorted_data = df.sort_values(by='sepal length (cm)')

# Filtering
filtered_data = df[df['sepal length (cm)'] > 5.0]

# Adding calculations
df['sepal_area'] = df['sepal length (cm)'] * df['sepal width (cm)']

summary_stats = df.groupby('target').agg(['mean', 'std', 'min', 'max'])

# Exporting to different formats
df.to_csv('iris_data.csv', index=False)
df.to_excel('iris_data.xlsx', index=False)

